// Generated by Dagger (https://dagger.dev).
package com.berners.truecaller.data.di;

import com.squareup.moshi.Moshi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteModule_ProvideRetrofitBuilderFactory implements Factory<Retrofit> {
  private final RemoteModule module;

  private final Provider<Moshi> moshiProvider;

  public RemoteModule_ProvideRetrofitBuilderFactory(RemoteModule module,
      Provider<Moshi> moshiProvider) {
    this.module = module;
    this.moshiProvider = moshiProvider;
  }

  @Override
  public Retrofit get() {
    return provideRetrofitBuilder(module, moshiProvider.get());
  }

  public static RemoteModule_ProvideRetrofitBuilderFactory create(RemoteModule module,
      Provider<Moshi> moshiProvider) {
    return new RemoteModule_ProvideRetrofitBuilderFactory(module, moshiProvider);
  }

  public static Retrofit provideRetrofitBuilder(RemoteModule instance, Moshi moshi) {
    return Preconditions.checkNotNullFromProvides(instance.provideRetrofitBuilder(moshi));
  }
}
