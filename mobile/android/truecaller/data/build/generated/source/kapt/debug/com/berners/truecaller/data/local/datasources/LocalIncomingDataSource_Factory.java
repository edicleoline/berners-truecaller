// Generated by Dagger (https://dagger.dev).
package com.berners.truecaller.data.local.datasources;

import com.berners.truecaller.data.local.db.daos.IncomingDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineDispatcher;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocalIncomingDataSource_Factory implements Factory<LocalIncomingDataSource> {
  private final Provider<IncomingDao> incomingDaoProvider;

  private final Provider<LocalPhoneDataSource> localPhoneDataSourceProvider;

  private final Provider<LocalIncomingEventDataSource> localIncomingEventDataSourceProvider;

  private final Provider<CoroutineDispatcher> ioDispatcherProvider;

  public LocalIncomingDataSource_Factory(Provider<IncomingDao> incomingDaoProvider,
      Provider<LocalPhoneDataSource> localPhoneDataSourceProvider,
      Provider<LocalIncomingEventDataSource> localIncomingEventDataSourceProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    this.incomingDaoProvider = incomingDaoProvider;
    this.localPhoneDataSourceProvider = localPhoneDataSourceProvider;
    this.localIncomingEventDataSourceProvider = localIncomingEventDataSourceProvider;
    this.ioDispatcherProvider = ioDispatcherProvider;
  }

  @Override
  public LocalIncomingDataSource get() {
    return newInstance(incomingDaoProvider.get(), localPhoneDataSourceProvider.get(), localIncomingEventDataSourceProvider.get(), ioDispatcherProvider.get());
  }

  public static LocalIncomingDataSource_Factory create(Provider<IncomingDao> incomingDaoProvider,
      Provider<LocalPhoneDataSource> localPhoneDataSourceProvider,
      Provider<LocalIncomingEventDataSource> localIncomingEventDataSourceProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    return new LocalIncomingDataSource_Factory(incomingDaoProvider, localPhoneDataSourceProvider, localIncomingEventDataSourceProvider, ioDispatcherProvider);
  }

  public static LocalIncomingDataSource newInstance(IncomingDao incomingDao,
      LocalPhoneDataSource localPhoneDataSource,
      LocalIncomingEventDataSource localIncomingEventDataSource, CoroutineDispatcher ioDispatcher) {
    return new LocalIncomingDataSource(incomingDao, localPhoneDataSource, localIncomingEventDataSource, ioDispatcher);
  }
}
