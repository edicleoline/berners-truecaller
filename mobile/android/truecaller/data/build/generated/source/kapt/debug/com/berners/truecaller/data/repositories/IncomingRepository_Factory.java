// Generated by Dagger (https://dagger.dev).
package com.berners.truecaller.data.repositories;

import com.berners.truecaller.data.datasources.IncomingDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class IncomingRepository_Factory implements Factory<IncomingRepository> {
  private final Provider<IncomingDataSource> localIncomingDataSourceProvider;

  public IncomingRepository_Factory(Provider<IncomingDataSource> localIncomingDataSourceProvider) {
    this.localIncomingDataSourceProvider = localIncomingDataSourceProvider;
  }

  @Override
  public IncomingRepository get() {
    return newInstance(localIncomingDataSourceProvider.get());
  }

  public static IncomingRepository_Factory create(
      Provider<IncomingDataSource> localIncomingDataSourceProvider) {
    return new IncomingRepository_Factory(localIncomingDataSourceProvider);
  }

  public static IncomingRepository newInstance(IncomingDataSource localIncomingDataSource) {
    return new IncomingRepository(localIncomingDataSource);
  }
}
