// Generated by Dagger (https://dagger.dev).
package com.berners.truecaller.data.repositories;

import com.berners.truecaller.data.datasources.IncomingEventDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class IncomingEventRepository_Factory implements Factory<IncomingEventRepository> {
  private final Provider<IncomingEventDataSource> localIncomingStateDataSourceProvider;

  public IncomingEventRepository_Factory(
      Provider<IncomingEventDataSource> localIncomingStateDataSourceProvider) {
    this.localIncomingStateDataSourceProvider = localIncomingStateDataSourceProvider;
  }

  @Override
  public IncomingEventRepository get() {
    return newInstance(localIncomingStateDataSourceProvider.get());
  }

  public static IncomingEventRepository_Factory create(
      Provider<IncomingEventDataSource> localIncomingStateDataSourceProvider) {
    return new IncomingEventRepository_Factory(localIncomingStateDataSourceProvider);
  }

  public static IncomingEventRepository newInstance(
      IncomingEventDataSource localIncomingStateDataSource) {
    return new IncomingEventRepository(localIncomingStateDataSource);
  }
}
