// Generated by Dagger (https://dagger.dev).
package com.berners.truecaller.data.di;

import com.berners.truecaller.data.remote.services.UserService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteModule_ProvideUserServiceFactory implements Factory<UserService> {
  private final RemoteModule module;

  private final Provider<Retrofit> retrofitProvider;

  public RemoteModule_ProvideUserServiceFactory(RemoteModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public UserService get() {
    return provideUserService(module, retrofitProvider.get());
  }

  public static RemoteModule_ProvideUserServiceFactory create(RemoteModule module,
      Provider<Retrofit> retrofitProvider) {
    return new RemoteModule_ProvideUserServiceFactory(module, retrofitProvider);
  }

  public static UserService provideUserService(RemoteModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideUserService(retrofit));
  }
}
