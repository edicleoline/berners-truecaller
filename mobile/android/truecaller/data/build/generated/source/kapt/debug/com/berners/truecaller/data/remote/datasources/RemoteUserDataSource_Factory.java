// Generated by Dagger (https://dagger.dev).
package com.berners.truecaller.data.remote.datasources;

import com.berners.truecaller.data.remote.services.UserService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteUserDataSource_Factory implements Factory<RemoteUserDataSource> {
  private final Provider<UserService> serviceProvider;

  public RemoteUserDataSource_Factory(Provider<UserService> serviceProvider) {
    this.serviceProvider = serviceProvider;
  }

  @Override
  public RemoteUserDataSource get() {
    return newInstance(serviceProvider.get());
  }

  public static RemoteUserDataSource_Factory create(Provider<UserService> serviceProvider) {
    return new RemoteUserDataSource_Factory(serviceProvider);
  }

  public static RemoteUserDataSource newInstance(UserService service) {
    return new RemoteUserDataSource(service);
  }
}
