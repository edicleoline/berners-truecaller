// Generated by Dagger (https://dagger.dev).
package com.berners.truecaller.data.di;

import com.berners.truecaller.data.local.db.AppDatabase;
import com.berners.truecaller.data.local.db.daos.IncomingDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseDaoModule_ProvideIncomingDaoFactory implements Factory<IncomingDao> {
  private final Provider<AppDatabase> dbProvider;

  public DatabaseDaoModule_ProvideIncomingDaoFactory(Provider<AppDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public IncomingDao get() {
    return provideIncomingDao(dbProvider.get());
  }

  public static DatabaseDaoModule_ProvideIncomingDaoFactory create(
      Provider<AppDatabase> dbProvider) {
    return new DatabaseDaoModule_ProvideIncomingDaoFactory(dbProvider);
  }

  public static IncomingDao provideIncomingDao(AppDatabase db) {
    return Preconditions.checkNotNullFromProvides(DatabaseDaoModule.INSTANCE.provideIncomingDao(db));
  }
}
