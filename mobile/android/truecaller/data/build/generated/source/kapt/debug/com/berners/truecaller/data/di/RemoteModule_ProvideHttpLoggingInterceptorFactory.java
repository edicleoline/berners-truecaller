// Generated by Dagger (https://dagger.dev).
package com.berners.truecaller.data.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteModule_ProvideHttpLoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  private final RemoteModule module;

  public RemoteModule_ProvideHttpLoggingInterceptorFactory(RemoteModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return provideHttpLoggingInterceptor(module);
  }

  public static RemoteModule_ProvideHttpLoggingInterceptorFactory create(RemoteModule module) {
    return new RemoteModule_ProvideHttpLoggingInterceptorFactory(module);
  }

  public static HttpLoggingInterceptor provideHttpLoggingInterceptor(RemoteModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideHttpLoggingInterceptor());
  }
}
