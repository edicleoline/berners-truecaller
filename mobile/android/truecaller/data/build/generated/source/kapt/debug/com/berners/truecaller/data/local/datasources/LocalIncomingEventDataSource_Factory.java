// Generated by Dagger (https://dagger.dev).
package com.berners.truecaller.data.local.datasources;

import com.berners.truecaller.data.local.db.daos.IncomingEventDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineDispatcher;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocalIncomingEventDataSource_Factory implements Factory<LocalIncomingEventDataSource> {
  private final Provider<IncomingEventDao> incomingEventDaoProvider;

  private final Provider<CoroutineDispatcher> ioDispatcherProvider;

  public LocalIncomingEventDataSource_Factory(Provider<IncomingEventDao> incomingEventDaoProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    this.incomingEventDaoProvider = incomingEventDaoProvider;
    this.ioDispatcherProvider = ioDispatcherProvider;
  }

  @Override
  public LocalIncomingEventDataSource get() {
    return newInstance(incomingEventDaoProvider.get(), ioDispatcherProvider.get());
  }

  public static LocalIncomingEventDataSource_Factory create(
      Provider<IncomingEventDao> incomingEventDaoProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    return new LocalIncomingEventDataSource_Factory(incomingEventDaoProvider, ioDispatcherProvider);
  }

  public static LocalIncomingEventDataSource newInstance(IncomingEventDao incomingEventDao,
      CoroutineDispatcher ioDispatcher) {
    return new LocalIncomingEventDataSource(incomingEventDao, ioDispatcher);
  }
}
