// Generated by Dagger (https://dagger.dev).
package com.berners.truecaller.data.repositories;

import com.berners.truecaller.data.datasources.PhoneDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PhoneRepository_Factory implements Factory<PhoneRepository> {
  private final Provider<PhoneDataSource> remotePhoneDataSourceProvider;

  private final Provider<PhoneDataSource> localPhoneDataSourceProvider;

  public PhoneRepository_Factory(Provider<PhoneDataSource> remotePhoneDataSourceProvider,
      Provider<PhoneDataSource> localPhoneDataSourceProvider) {
    this.remotePhoneDataSourceProvider = remotePhoneDataSourceProvider;
    this.localPhoneDataSourceProvider = localPhoneDataSourceProvider;
  }

  @Override
  public PhoneRepository get() {
    return newInstance(remotePhoneDataSourceProvider.get(), localPhoneDataSourceProvider.get());
  }

  public static PhoneRepository_Factory create(
      Provider<PhoneDataSource> remotePhoneDataSourceProvider,
      Provider<PhoneDataSource> localPhoneDataSourceProvider) {
    return new PhoneRepository_Factory(remotePhoneDataSourceProvider, localPhoneDataSourceProvider);
  }

  public static PhoneRepository newInstance(PhoneDataSource remotePhoneDataSource,
      PhoneDataSource localPhoneDataSource) {
    return new PhoneRepository(remotePhoneDataSource, localPhoneDataSource);
  }
}
