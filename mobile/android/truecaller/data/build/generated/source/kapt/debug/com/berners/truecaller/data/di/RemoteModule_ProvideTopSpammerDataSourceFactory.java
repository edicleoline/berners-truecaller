// Generated by Dagger (https://dagger.dev).
package com.berners.truecaller.data.di;

import com.berners.truecaller.data.remote.datasources.RemoteTopSpammerDataSource;
import com.berners.truecaller.data.remote.services.TopSpammerService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteModule_ProvideTopSpammerDataSourceFactory implements Factory<RemoteTopSpammerDataSource> {
  private final RemoteModule module;

  private final Provider<TopSpammerService> serviceProvider;

  public RemoteModule_ProvideTopSpammerDataSourceFactory(RemoteModule module,
      Provider<TopSpammerService> serviceProvider) {
    this.module = module;
    this.serviceProvider = serviceProvider;
  }

  @Override
  public RemoteTopSpammerDataSource get() {
    return provideTopSpammerDataSource(module, serviceProvider.get());
  }

  public static RemoteModule_ProvideTopSpammerDataSourceFactory create(RemoteModule module,
      Provider<TopSpammerService> serviceProvider) {
    return new RemoteModule_ProvideTopSpammerDataSourceFactory(module, serviceProvider);
  }

  public static RemoteTopSpammerDataSource provideTopSpammerDataSource(RemoteModule instance,
      TopSpammerService service) {
    return Preconditions.checkNotNullFromProvides(instance.provideTopSpammerDataSource(service));
  }
}
